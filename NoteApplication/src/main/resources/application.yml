spring:
  security:
    oauth2:
      resource-server:
        jwt:
          issuer-uri: ${app.jwt.issuer-uri}
          jwk-set-uri: ${app.jwt.issuer-uri}/protocol/openid-connect/certs

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include:
          - health
          - info
  endpoint:
    health:
      enabled: true
      show-details: "when-authorized"
      roles:
        - "ADMIN"
    info:
      enabled: true
  info:
    env:
      enabled: true

info:
  app:
    encoding: "@project.build.sourceEncoding@"
    java:
      source: "@java.version@"
      target: "@java.version@"

springdoc:
  show-actuator: true
  swagger-ui:
    tagsSorter: alpha
    filter: true

app:
  cors:
    allowed-origins: http://localhost:3000
  jwt:
    keycloak: http://localhost:8443
    realm: noteapp
    issuer-uri: ${app.jwt.keycloak}/realms/${app.jwt.realm}
    resource-client-id: frontend

logging:
  level:
    com.example.backend: DEBUG

---

spring:
  datasource:
    url: ${DATABASE_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: ${DATABASE_DDL}
    show-sql: true
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
app:
  jwt:
    keycloak: http://keycloak:8443

server:
  port: 8080




